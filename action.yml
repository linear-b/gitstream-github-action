name: 'GitStream CMR'
description: 'Public github action for GitStream continuous merge platform'

inputs:
  full_repository:
    description: 'Path of full Repository'
    required: true
  head_ref:
    description: 'Head Branch Ref to checkout to'
    required: true
  base_ref:
    description: 'Base Branch Ref to checkout to'
    required: true
  client_payload:
    description: 'The client payload'
    required: true
  installation_id: 
    description: 'The github app installation id'
    required: false
  resolver_url:
    description: 'Resolver url to send results to'
    required: true
  resolver_token:
    description: 'Optional token for resolver'
    required: false

runs:
  using: 'composite'
  timeout-minutes: 15
  steps:
    - name: Checkout original repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.full_repository }}
        ref: ${{ github.event.inputs.head_ref }}
        fetch-depth: 0
        path: "usercode/"
    - name: Create GitStream folder
      id: create-gitstream-folder
      shell: bash
      run: |
        mkdir gitstream
    - name: Get Diff Base
      id: get-diff
      shell: bash
      run: |
        cd usercode/
        git fetch origin ${{ github.event.inputs.base_ref }}
        git diff origin/${{ github.event.inputs.head_ref }}..origin/${{ github.event.inputs.base_ref }} > ../gitstream/mydiff
    - name: Get CM file
      id: get-cm-file
      shell: bash
      run: |
        cd usercode/
        cat .cm/gitstream.cm > ../gitstream/rules.cm
    
    - name: Cache docker pull
    - run: mkdir -p ~/image-cache
      - id: image-cache
        uses: actions/cache@v1
        with:
            path: ~/image-cache
            key: image-cache-${{ runner.os }}
      - if: always() && ${{ steps.cache-docker-pull.outputs.cache-hit === 'false' }}
        run: |
            docker pull gitstream/rules-engine:latest
            docker run -v $(pwd)/gitstream:/code -e HEAD_REF=${{ github.event.inputs.head_ref }} -e BASE_REF=${{ github.event.inputs.base_ref }} -e CLIENT_PAYLOAD=${{ github.event.inputs.client_payload }} -e RULES_RESOLVER_URL=${{ github.event.inputs.resolver_url }} -e RULES_RESOLVER_TOKEN=${{ github.event.inputs.resolver_token }} gitstream/rules-engine
        shell: bash
